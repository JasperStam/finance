version: "3"

services:
  nginx:
    restart: unless-stopped
    container_name: nginx
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /data/nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
      - /data/nginx/www:/var/www

  frontend:
    restart: unless-stopped
    build: frontend-v2

  scraper:
    build: scraper
    command: npm start
    environment:
      - MEDIA_DIR=media
    volumes:
      - /data/finance/scraper:/app/media

  db:
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  web:
    build: backend
    command: python ./manage.py runserver 0.0.0.0:8000
    depends_on:
      - db
      - scraper
    environment:
      DEBUG: "${DEBUG}"
      MEDIA_ROOT: "${MEDIA_ROOT}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_HOST: "${DB_HOST}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: "${DB_PORT}"
      LOGFILE_LEVEL: "${LOGFILE_LEVEL}"
      LOGFILE_PATH: "${LOGFILE_PATH}"
      SCRAPER_URL: "http://scraper:8080"

volumes:
  postgres:
  media:
